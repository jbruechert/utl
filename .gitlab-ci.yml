variables:
  ASAN_SYMBOLIZER_PATH: /usr/bin/llvm-symbolizer

image: git.motis-project.de:5001/motis/motis/build:latest

# GCC production
gcc-release:
  tags:
    - docker
  script:
    - mkdir -p build-release
    - cd build-release
    - cmake-sccache-gcc-9 -DCMAKE_BUILD_TYPE=Release ..
    - ninja utl-test
    - ./utl-test
    - sccache -s

# Clang debug with address sanitizer
clang-debug-asan:
  tags:
    - docker
  script:
    - export UBSAN_OPTIONS=halt_on_error=1:abort_on_error=1
    - mkdir -p build-clang-debug-asan
    - cd build-clang-debug-asan
    - cmake-sccache-clang-9-san -DCMAKE_BUILD_TYPE=Debug ..
    - ninja utl-test
    - ./utl-test
    - sccache -s

# GCC debug valgrind
gcc-debug-valgrind:
  tags:
    - docker
  script:
    - mkdir -p build-gcc-debug-valgrind
    - cd build-gcc-debug-valgrind
    - cmake-sccache-gcc-9 -DCMAKE_BUILD_TYPE=Debug ..
    - ninja utl-test
    - valgrind --leak-check=full --show-reachable=yes --gen-suppressions=all ./utl-test
    - sccache -s

# MSVC release
msvc-release:
  tags:
    - windows
  script:
    - set WD=%cd%
    - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
    - cd %WD%
    - set BOOST_ROOT=C:\boost_1_70_0
    - mkdir build-msvc-release
    - cd build-msvc-release
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
    - ninja utl-test
    - utl-test

# MSVC debug
msvc-debug:
  tags:
    - windows
  script:
    - set WD=%cd%
    - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
    - cd %WD%
    - set BOOST_ROOT=C:\boost_1_70_0
    - mkdir build-msvc-debug
    - cd build-msvc-debug
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Debug ..
    - ninja utl-test
    - utl-test

# TODO(felix) enable
# clang-format:
#   tags:
#     - docker
#   script:
#     - mkdir build-clang-format
#     - cd build-clang-format
#     - cmake-clang-9 -GNinja ..
#     - ninja utl-format-check
#
# clang-tidy:
#   tags:
#     - artful
#   script:
#     - export CXX=clang++
#     - export CC=clang
#     - export CXXFLAGS="-stdlib=libc++"
#     - mkdir build-clang-tidy
#     - cd build-clang-tidy
#     - cmake ..
#     - make -j12 utl-lint

